{"version":3,"sources":["Validator.ts","WordGen.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["list","a","valid","cached","JSON","parse","localStorage","getItem","promiseValidate","word","url","toLowerCase","undefined","fetch","method","res","status","headers","get","console","log","asyncPool","setItem","stringify","Object","entries","filter","map","x","gen3","text","Array","from","replace","len","length","outputs","i1","i2","i3","Set","size","push","sort","useWordValidate","useState","validWords","setValidWord","validateCallback","useCallback","t","validate","useEffect","join","validateRun","App","setText","result","setResult","clickMe","data","i4","gen4","i5","gen5","className","type","onChange","input","target","value","toUpperCase","placeholder","onClick","aria-label","readOnly","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9980b001.chunk.js","sourcesContent":["import asyncPool from 'tiny-async-pool';\n\nexport async function validate(list: string[]) {\n  const valid: { [x: string]: boolean } = {};\n  const cached = JSON.parse(localStorage.getItem('CACHE') || '{}');\n\n  const promiseValidate = async (word: string) => {\n    const url = `https://samuraitruong.github.io/open-vn-en-dict/data/${word.toLowerCase()}.json`;\n    valid[word] = cached[word];\n    if (valid[word] === undefined) {\n      try {\n        const res = await fetch(url, {\n          // mode: 'no-cors',\n          method: 'HEAD',\n        });\n\n        valid[word] =\n          res &&\n          res.status === 200 &&\n          (res.headers.get('content-length') || 0) > 10;\n      } catch (err) {\n        console.log(url, word, err);\n      }\n    }\n  };\n\n  await asyncPool(50, list, promiseValidate);\n  localStorage.setItem('CACHE', JSON.stringify({ ...cached, ...valid }));\n  return Object.entries(valid)\n    .filter(([key, value]) => value)\n    .map((x) => x[0]);\n}\n","export function gen3(text: string) {\n  const list = Array.from(text.replace(/\\\\s/gi, ''));\n  const len = list.length;\n  const outputs: string[] = [];\n  for (var i1 = 0; i1 < len; i1++)\n    for (var i2 = 0; i2 < len; i2++) {\n      for (var i3 = 0; i3 < len; i3++) {\n        if (new Set([i1, i2, i3]).size === 3)\n          outputs.push(list[i1] + list[i2] + list[i3]);\n      }\n    }\n  return outputs.sort();\n}\n\nexport function gen4(text: string) {\n  const list = Array.from(text.replace(/\\\\s/gi, ''));\n  const len = list.length;\n  if (len < 4) return [];\n  const outputs: string[] = [];\n  for (var i1 = 0; i1 < len; i1++)\n    for (var i2 = 0; i2 < len; i2++) {\n      for (var i3 = 0; i3 < len; i3++) {\n        for (var i4 = 0; i4 < len; i4++) {\n          if (new Set([i1, i2, i3, i4]).size === 4)\n            outputs.push(list[i1] + list[i2] + list[i3] + list[i4]);\n        }\n      }\n    }\n  return outputs;\n}\n\nexport function gen5(text: string) {\n  const list = Array.from(text.replace(/\\\\s/gi, ''));\n  const len = list.length;\n  if (len < 5) return [];\n  const outputs: string[] = [];\n  for (var i1 = 0; i1 < len; i1++)\n    for (var i2 = 0; i2 < len; i2++) {\n      for (var i3 = 0; i3 < len; i3++) {\n        for (var i4 = 0; i4 < len; i4++) {\n          for (var i5 = 0; i5 < len; i5++) {\n            if (new Set([i1, i2, i3, i4, i5]).size === 5)\n              outputs.push(\n                list[i1] + list[i2] + list[i3] + list[i4] + list[i5],\n              );\n          }\n        }\n      }\n    }\n  return outputs;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport './App.css';\nimport { validate } from './Validator';\nimport { gen3, gen4, gen5 } from './WordGen';\n\nfunction useWordValidate(list: string[]) {\n  const [validWords, setValidWord] = useState<string>('');\n  const validateCallback = useCallback((t: string[]) => {\n    return validate(t);\n  }, []);\n\n  useEffect(() => {\n    setValidWord('Please wait ....');\n    async function validateRun() {\n      const valid = await validateCallback(list);\n      setValidWord(valid.join('\\n'));\n    }\n    validateRun();\n  }, [validateCallback, list]);\n\n  return validWords;\n}\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(gen3(text));\n  const validWords = useWordValidate(result);\n\n  const onChange = (input: any) => {\n    setText(input.target.value.toUpperCase());\n  };\n\n  const clickMe = (len: number) => {\n    let data: string[] = [];\n    switch (len) {\n      case 3:\n        data = gen3(text);\n        break;\n      case 4:\n        data = gen4(text);\n        break;\n      case 5:\n        data = gen5(text);\n    }\n    setResult(data);\n  };\n\n  return (\n    <div className='App'>\n      <div className='InputWrap'>\n        <input\n          type='text'\n          className='Input'\n          onChange={onChange}\n          value={text}\n          placeholder='INPUT'\n        />\n        <ul className='ButtonList'>\n          {text.length >= 3 && <li onClick={() => clickMe(3)}>3</li>}\n          {text.length >= 4 && <li onClick={() => clickMe(4)}>4</li>}\n          {text.length >= 5 && <li onClick={() => clickMe(5)}>5</li>}\n        </ul>\n      </div>\n      <textarea\n        className='Result'\n        aria-label='Output'\n        placeholder='No Results'\n        value={validWords}\n        readOnly={true}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}